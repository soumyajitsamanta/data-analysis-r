
R version 4.2.2 Patched (2022-11-10 r83330) -- "Innocent and Trusting"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Author: Soumyajit Samanta
> # LICENSE
> # The code is copyright of authors mentioned above 
> # and may not be reproduced or used in other form 
> # without permission.
> # 
> # Problem: Look at the market OHLC data to find out 
> #     the days which have given mostly positive 
> #     changes and explore if there is any relation 
> #     between the day of week and the price of the 
> #     Nifty 50 index.
> # Solution: We use the data from NSE site at 
> # [Historical Index Data](https://www.nseindia.com/reports-indices-historical-index-data)
> # We can then calculate the day of week and the change
> # of the day using. Then we can use the linear model in
> # R with change as dependent variable and all other 
> # numeric parameters as independent variable. Then we 
> # can plot and draw our own conclusion.
> 
> # Load data
> niftyData <-
+   read.csv(
+     "NIFTY 50-14-09-2023-to-14-03-2024.csv",
+     header = TRUE
+   )
> 
> # Calculate the change, date and the dayname.
> niftyData$change <- niftyData$Close - niftyData$Open
> niftyData$changePercent <- round((niftyData$change / niftyData$Open)*100, 3)
> niftyData$dateParsed <- as.Date(niftyData$Date, format = "%d-%b-%Y")
> niftyData$dayName <- weekdays(niftyData$dateParsed)
> 
> summary(niftyData)
     Date                Open            High            Low       
 Length:124         Min.   :18929   Min.   :19042   Min.   :18838  
 Class :character   1st Qu.:19682   1st Qu.:19778   1st Qu.:19637  
 Mode  :character   Median :21072   Median :21250   Median :21026  
                    Mean   :20820   Mean   :20895   Mean   :20720  
                    3rd Qu.:21757   3rd Qu.:21833   3rd Qu.:21660  
                    Max.   :22518   Max.   :22527   Max.   :22430  
     Close       Shares.Traded       Turnover....Cr.     change        
 Min.   :18857   Min.   : 35763814   Min.   : 1919   Min.   :-477.900  
 1st Qu.:19693   1st Qu.:208257730   1st Qu.:19880   1st Qu.: -71.675  
 Median :21166   Median :265341662   Median :24399   Median :   0.875  
 Mean   :20810   Mean   :278562754   Mean   :25941   Mean   : -10.327  
 3rd Qu.:21742   3rd Qu.:345723568   3rd Qu.:31002   3rd Qu.:  58.750  
 Max.   :22494   Max.   :508761756   Max.   :50114   Max.   : 304.500  
 changePercent       dateParsed           dayName         
 Min.   :-2.2010   Min.   :2023-09-14   Length:124        
 1st Qu.:-0.3473   1st Qu.:2023-10-31   Class :character  
 Median : 0.0045   Median :2023-12-14   Mode  :character  
 Mean   :-0.0476   Mean   :2023-12-15                     
 3rd Qu.: 0.2923   3rd Qu.:2024-01-30                     
 Max.   : 1.4210   Max.   :2024-03-13                     
> 
> # Perform linear regression analysis with change as dependent variable.
> # All other numeric values as independent variable.
> linearModel <-
+   lm(
+     niftyData$change ~ niftyData$Open + niftyData$High + niftyData$Low + niftyData$Close +
+       niftyData$dateParsed + niftyData$Open + niftyData$dayName,
+     niftyData
+   )
> linearModel

Call:
lm(formula = niftyData$change ~ niftyData$Open + niftyData$High + 
    niftyData$Low + niftyData$Close + niftyData$dateParsed + 
    niftyData$Open + niftyData$dayName, data = niftyData)

Coefficients:
               (Intercept)              niftyData$Open  
                -1.547e-09                  -1.000e+00  
            niftyData$High               niftyData$Low  
                -1.440e-16                   2.269e-15  
           niftyData$Close        niftyData$dateParsed  
                 1.000e+00                   8.207e-14  
   niftyData$dayNameMonday   niftyData$dayNameSaturday  
                -4.762e-13                  -1.315e-12  
   niftyData$dayNameSunday   niftyData$dayNameThursday  
                -2.151e-12                  -3.359e-12  
  niftyData$dayNameTuesday  niftyData$dayNameWednesday  
                -5.809e-13                  -5.558e-13  

> summary(linearModel)

Call:
lm(formula = niftyData$change ~ niftyData$Open + niftyData$High + 
    niftyData$Low + niftyData$Close + niftyData$dateParsed + 
    niftyData$Open + niftyData$dayName, data = niftyData)

Residuals:
       Min         1Q     Median         3Q        Max 
-6.935e-11 -1.390e-12  5.720e-13  1.651e-12  9.289e-12 

Coefficients:
                             Estimate Std. Error    t value Pr(>|t|)    
(Intercept)                -1.547e-09  5.682e-10 -2.723e+00  0.00750 ** 
niftyData$Open             -1.000e+00  1.404e-14 -7.123e+13  < 2e-16 ***
niftyData$High             -1.440e-16  1.466e-14 -1.000e-02  0.99218    
niftyData$Low               2.269e-15  1.587e-14  1.430e-01  0.88657    
niftyData$Close             1.000e+00  1.385e-14  7.223e+13  < 2e-16 ***
niftyData$dateParsed        8.207e-14  3.017e-14  2.720e+00  0.00756 ** 
niftyData$dayNameMonday    -4.762e-13  2.113e-12 -2.250e-01  0.82210    
niftyData$dayNameSaturday  -1.315e-12  5.293e-12 -2.490e-01  0.80418    
niftyData$dayNameSunday    -2.151e-12  7.234e-12 -2.970e-01  0.76676    
niftyData$dayNameThursday  -3.359e-12  2.055e-12 -1.634e+00  0.10496    
niftyData$dayNameTuesday   -5.809e-13  2.133e-12 -2.720e-01  0.78590    
niftyData$dayNameWednesday -5.558e-13  2.123e-12 -2.620e-01  0.79400    
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 6.953e-12 on 112 degrees of freedom
Multiple R-squared:      1,	Adjusted R-squared:      1 
F-statistic: 3.915e+27 on 11 and 112 DF,  p-value: < 2.2e-16

> 
> # Convert category of days name into numeric value.
> dayNameFactor <- factor(niftyData$dayName)
> niftyData$dayNameNumeric <- as.numeric(dayNameFactor)
> 
> factorReference <- data.frame(
+   level = levels(dayNameFactor),
+   index = rank(levels(dayNameFactor), ties.method = "first")
+ )
> 
> # Plot the change values grouped by its day names numeric value from above.
> plot(
+   niftyData$change
+   , 
+   niftyData$dayNameNumeric
+ )
> 
> factorReference
      level index
1    Friday     1
2    Monday     2
3  Saturday     3
4    Sunday     4
5  Thursday     5
6   Tuesday     6
7 Wednesday     7
> 
> proc.time()
   user  system elapsed 
  0.505   0.097   5.884 
